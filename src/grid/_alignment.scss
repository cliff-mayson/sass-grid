$grid_prefix: 'g-';
$breakpoint: '';

/* ====== Horizontal Alignment ====== */

//
/// Left align horizontally
//
@mixin grid--halign-left($reversed: false) {

	@if not $reversed {

		.flexbox & {
			justify-content: flex-start;
		}

	} @else {

		.flexbox & {
			justify-content: flex-end; //when the ordering is reversed, so is the alignment
		}

	}

	.no-flexbox & {
		text-align: left;
	}

}

//
/// Center horizontally
//
@mixin grid--halign-center() {

	.flexbox & {
		justify-content: center;
	}

	.no-flexbox & {
		text-align: center;
	}

}

//
/// Right align horizontally
//
@mixin grid--halign-right($reversed: false) {

	@if not $reversed {

		.flexbox & {
			justify-content: flex-end;
		}

	} @else {

		.flexbox & {
			justify-content: flex-start; //when the ordering is reversed, so is the alignment
		}

	}

	.no-flexbox & {
		text-align: right;
	}

}

//
/// Justify horizontally
//
@mixin grid--halign-justify() {

	.flexbox & {
		justify-content: space-between;
	}

	.no-flexbox & {
		text-align: justify;
		text-justify: distribute;
	}

	.no-flexbox &:after {
		display: inline-block;
		content: "";
		width: 100%;
	}

}

//
/// Justify horizontally
//
@mixin grid--halign-justify-center() {

	.flexbox & {
		justify-content: space-around;
	}

	.no-flexbox & {
		text-align: justify;
		text-justify: distribute;
	}

	.no-flexbox &:after {
		display: inline-block;
		content: "";
		width: 100%;
	}

}

/* ====== Vertical Align ====== */

.flexbox .grid[#{$grid_prefix}#{$breakpoint}~="valign:top"] {
	align-items: flex-start;
}

.flexbox .grid[#{$grid_prefix}#{$breakpoint}~="valign:middle"] {
	align-items: center;
}

.flexbox .grid[#{$grid_prefix}#{$breakpoint}~="valign:bottom"] {
	align-items: flex-end;
	vertical-align: bottom;
}

.flexbox .grid[#{$grid_prefix}#{$breakpoint}~="valign:stretch"] {
	align-items: stretch;
}
